package headerFileViewer;

import javax.swing.*;
import java.awt.event.*;
import java.awt.*;

/************************************************
 *                                        GETTER MANUAL
 * 
 * Class                                              Method                          Description 
 * Parser(String address)                             getTextBuffer()                 address의 주소에 있는 텍스트를 StringBuffer에 담아 그것을 반환
 * 
 * Tokenizer(StringBuffer mainText)                   getDeclarationTokens()          Stack.h의 선언 필드의 텍스트를 분석 및 토큰화하여 ArrayString 반환.
 *                                                    getDefinitionTokens()           Stack.h의 함수 정의 필드의 텍스트를 분석 및 토큰화하여 ArrayString 반환.
 * 
 * ClassInfo(ArrayString<String> decText,             getClassName()           		  클래스의 이름 반환
 *           ArrayString<String> defText)             
 *                                                    getName(int index)             테이블 구조에 필요한 index번째에 있는 속한 메소드 및 변수 이름 스트링을 반환
 *                                                    getType(int index)             테이블 구조에 필요한 index번째에 있는 타입 이름 스트링을 반환
 *                                                    getAccess(int index)           테이블 구조에 필요한 index번째에 있는 속한 접근 지시자 스트링을 반환
 *                                                    (위 세 메소드의 index는 0부터 시작하고 같은 행에 있는 것들의 index는 같아야 한다는 것에 주의)
 *                                                    
 */////////////////////////////////////////////

public class MainApp extends JFrame{
    public MainApp(){
    	
    }
    public static void main(String[] args){
        Parser p = new Parser("bin\\Stack.h");
        Tokenizer t = new Tokenizer(p.getTextBuffer());
        System.out.println("---------------------Testing declaration tokens-----------------");
        for (String i : t.getDeclarationTokens()){
            System.out.println(i);
        }
        ClassInfo c = new ClassInfo(t.getDeclarationTokens(), t.getDefinitionTokens());
        System.out.println("---------------------Testing table------------------------------");
        c.printTable();
        System.out.println("---------------------Testing member variables-------------------");
        for (String i : c.getMemberVariables()) {
        	System.out.println(i);
        }
        System.out.println("---------------------Testing definition tokens------------------");
        for (String i : t.getDefinitionTokens()){
            System.out.println(i);
            System.out.println("-------------------------------------------------------------");
        }
        
        System.out.println("---------------------Testing methodInfo--------------------------");
        c.printMethods();
        System.out.println("------------------Testing VariableInfo---------------------------");
        c.printVariables();
    }
}


